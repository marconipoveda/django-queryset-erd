name: Django Queryset ERD CI/CD

on:
  push:
    tags:
      - "v*" # Trigger on push of version tags (e.g., v1.0.0)
  pull_request:
    branches: [main] # Trigger on pull requests to main branch
    paths:
      - django_queryset_erd/** # Trigger on changes to the package code
      - setup.cfg # Trigger on changes to the package metadata


jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.12"]
        django-version: ["4.2", "5.0"]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Django==${{ matrix.django-version }}
          pip install -e .
          pip install pytest pytest-django
      - name: Run Tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest

  build-and-upload:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v') # Only run if we're pushing a new version tag.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Build Package
        run: python -m build
      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
